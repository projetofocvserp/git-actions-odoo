name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Remove extra-addons folder
        run: rm -rf extra-addons

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v2
        # with:
        #   token: ${{ secrets.RELEASE_HUB_SECRET }}

      - name: Checkout submodules
        run: |
          git config --global --add safe.directory /github/workspace
          git submodule update --init --recursive

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get the latest image tag
        id: get-latest-tag
        run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 || echo 0)

      - name: Get the date
        id: date
        run: echo "tag=$(TZ=America/Sao_Paulo date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Build and tag Docker image
        env:
          DOCKER_BUILDKIT: 1
          tag: ${{ env.tag }}
        run: |
          docker build -t 581989799031.dkr.ecr.us-east-2.amazonaws.com/temporary:$tag .

      - name: Push Docker image to ECR
        env:
          tag: ${{ env.tag }}
        run: |
          docker push 581989799031.dkr.ecr.us-east-2.amazonaws.com/temporary:$tag

      - name: Install and configure kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          aws eks update-kubeconfig --name testing --region us-east-2 --role-arn arn:aws:iam::581989799031:role/RoleEksClusterSuperAdmin --alias testing
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to EKS
        env:
          tag: ${{ env.tag }}
        run: |
          kubectl set image deployment/odoo odoo=581989799031.dkr.ecr.us-east-2.amazonaws.com/temporary:$tag --namespace testing

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi

      - name: Get the old configmap
        run: kubectl get cm/odoo-conf --namespace testing -o yaml > config_map.yaml

      - name: Generate ConfigMap
        run: python3 configmap_generator.py

      - name: Apply ConfigMap
        run: kubectl apply -f config_map.yaml --namespace testing
        env:
          tag: ${{ env.tag }}
          # KUBECONFIG_FILE: ${{ secrets.KUBECONFIG_FILE }}
